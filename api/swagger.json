{
    "openapi": "3.0.0",
    "info": {
      "title": "Candidate Referral API",
      "version": "1.0.0",
      "description": "API for managing candidate referrals"
    },
    "servers": [
      {
        "url": "http://localhost:9999",
        "description": "Local server"
      }
    ],
    "paths": {
      "/api/auth/register": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Authentication"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  },
                  "required": ["name", "email", "password"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "64f1b2b3b4c5d6e7f8g9h0i"
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "email": {
                            "type": "string",
                            "example": "john.doe@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Validation error or user already exists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "User already exists"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/auth/login": {
        "post": {
          "summary": "Login a user",
          "tags": ["Authentication"],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "64f1b2b3b4c5d6e7f8g9h0i"
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "email": {
                            "type": "string",
                            "example": "john.doe@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid credentials",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Invalid credentials"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string",
                        "example": "Server error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/candidates": {
        "get": {
          "summary": "Get all referred candidates",
          "tags": ["Candidates"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "A list of candidates",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "summary": "Create a new candidate",
          "tags": ["Candidates"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phoneNumber": {
                      "type": "string"
                    },
                    "jobTitle": {
                      "type": "string"
                    },
                    "resume": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Candidate created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Candidate"
                  }
                }
              }
            },
            "400": {
              "description": "Validation error"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/candidates/{id}/status": {
        "patch": {
          "summary": "Update candidate status",
          "tags": ["Candidates"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "Candidate ID"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["Pending", "Reviewed", "Hired"]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Candidate status updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Candidate"
                  }
                }
              }
            },
            "400": {
              "description": "Validation error"
            },
            "404": {
              "description": "Candidate not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/candidates/{id}": {
        "delete": {
          "summary": "Delete a candidate",
          "tags": ["Candidates"],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "Candidate ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Candidate deleted successfully"
            },
            "404": {
              "description": "Candidate not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Candidate": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "resumeUrl": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": ["Pending", "Reviewed", "Hired"]
            },
            "referredBy": {
              "type": "string"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": ["name", "email", "phoneNumber", "jobTitle", "referredBy"]
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }